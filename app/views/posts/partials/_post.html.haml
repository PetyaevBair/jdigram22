.post{:id => "post_#{post.id}"}
  .user
    - if post.user.image.blank?
    - else
      .avatar
        = image_tag post.user.image, class: "user-image"
    .username
      = link_to post.user.username, user_path(post.user), class: "nickname"
    - if current_user == post.user
      .post-edit
        = link_to edit_post_path(post) do
          .link-post-edit.fa.fa-edit.edit-icon
        = link_to post_path(post), method: :delete, remote: true do
          .link-post-delete.fa.fa-trash.del-icon
  = image_tag post.crop, class: "post-image"
  .likes
    - if user_signed_in?
      - like = current_user.likes.find_by(likeable_type: "Post", likeable_id: post.id)
      - if like.present?
        = link_to like_path(likeable_type: "Post", likeable_id: post.id), method: :post, remote: true do
          %i.like.fa.fa-heart.like_on{id: post.id}
      - else
        = link_to like_path(likeable_type: "Post", likeable_id: post.id), method: :post, remote: true do
          %i.like.fa.fa-heart.like_off{id: post.id}  
    - else
      %p.like
        %i.fa.fa-heart.like_off
    %input.count-likes{:id => "like_#{post.id}", :value => "#{post.likes.count}"}/
  .description
    = post.description
  .comments-form
    - if user_signed_in?
      = render partial: "comments/new", locals: {post: post, comment: post.comments.new}
  .comments{:id => "comment_box_#{post.id}"}
    - post.comments.each do |comment|
      - if comment.id.present?
        = render partial: "/posts/partials/last_comment", locals: { post: post, comment: comment }
